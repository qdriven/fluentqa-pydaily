[tool.poetry]
name = "pydaily"
version = "0.1.0"
description = "fluent qa pydaily tutorial"
authors = ["Patrick <fakepatrick@163.com>"]
readme = "README.md"
packages = [
    { include = "pydaily" },
]
include = [
    { path = "tests", format = "sdist" }
]
# homepage = "https://python-poetry.org/"
# repository = "https://github.com/python-poetry/poetry"
# documentation = "https://python-poetry.org/docs"
# keywords = ["packaging", "dependency", "poetry"]
# classifiers = [
#     "Topic :: Software Development :: Build Tools",
#     "Topic :: Software Development :: Libraries :: Python Modules"
# ]
[tool.poetry.dependencies]
python = "^3.10"
deep-translator = "^1.8.3"
fastapi = "^0.78.0"
SQLAlchemy = "^1.4.36"
sqlmodel = "^0.0.6"
uvicorn = "^0.17.6"
loguru = "^0.6.0"
structlog = "^21.5.0"
dynaconf = "^3.1.8"
pyscript-cli = "^0.2.1"
pathdict = "^0.0.9"
python-box = "^6.0.2"
injector = "^0.19.0"
datamodel-code-generator = {extras = ["http"], version = "^0.12.0"}

[tool.poetry.dev-dependencies]
pytest = "^7.1.2"
tox = "^3.25.0"
pytest-cov = "^3.0.0"
pytest-mock = "^3.7.0"
pytest-sugar = "^0.9.4"
deepdiff = "^5.8.1"
pre-commit = "^2.18.1"
httpretty = "^1.1.4"
typing-extensions = "^4.2.0"
zipp = "^3.8.0"
flatdict = "^4.0.1"
mkdocs-material = "^8.2.15"
mkdocs = "^1.3.0"
mkdocs-material-extensions = "^1.0.3"
pymdown-extensions = "^9.4"
Pygments = "^2.12.0"
mkdocs-minify-plugin = "^0.5.0"

# [tool.poetry.build]
# generate-setup-file = false

jupytext = "^1.13.8"
datamodel-code-generator = "^0.12.0"
invoke = "^1.7.1"
# [tool.poetry.scripts]
# poetry = "poetry.console.application:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.isort]
py_version = 310
profile = "black"
force_single_line = true
combine_as_imports = true
lines_between_types = 1
lines_after_imports = 2
src_paths = ["pydaily", "tests"]
extend_skip = ["setup.py"]


[tool.black]
target-version = ['py310']
preview = true
force-exclude = '''
.*/setup\.py$
'''


# [tool.mypy]
# check_untyped_defs = true
# ignore_missing_imports = true
# show_error_codes = true
# warn_redundant_casts = true
# warn_unused_configs = true
# warn_unused_ignores = true
# files = "src"

# The following whitelist is used to allow for incremental adoption
# of Mypy. Modules should be removed from this whitelist as and when
# their respective type errors have been addressed. No new modules
# should be added to this whitelist.
# see https://github.com/python-poetry/poetry/pull/4510.

# [[tool.mypy.overrides]]
# module = [
#   'poetry.console.commands.init',
#   'poetry.inspection.info',
#   'poetry.installation.chef',
#   'poetry.installation.chooser',
#   'poetry.installation.executor',
#   'poetry.installation.installer',
#   'poetry.installation.pip_installer',
#   'poetry.repositories.installed_repository',
#   'poetry.utils.env',
# ]
# ignore_errors = true


[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:"
]


